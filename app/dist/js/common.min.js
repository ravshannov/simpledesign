"use strict";

var headerBtn = document.querySelector('.header__nav-btn');
var headerNav = document.querySelector('.header__nav-media');
var navLink = document.querySelectorAll('.header__link');
navLink.forEach(function (link) {
  link.addEventListener('click', function (e) {
    for (var i = 0; i < navLink.length; i++) {
      navLink[i].classList.remove('active');
    }

    this.classList.add('active');
  });
});
headerBtn.addEventListener('click', function () {
  headerBtn.classList.toggle('active');
  headerNav.classList.toggle('active');
}); // accardion

var infoBoxes = document.querySelectorAll('.info__box');

for (var i = 0; i < infoBoxes.length; i++) {
  infoBoxes[i].addEventListener('click', function () {
    for (var j = 0; j < infoBoxes.length; j++) {
      infoBoxes[j].classList.remove('active');
    }

    this.classList.add('active');
  });
}

var sliderbtns = document.querySelectorAll('[data-target]');
var sliderItems = document.querySelectorAll('.slider__item');
var slider = document.querySelector('.slider');
var activeSlide = 0;

for (var _i = 0; _i < sliderItems.length; _i++) {
  if (sliderItems[_i].classList.contains('active')) {
    activeSlide = _i;
  }
}

sliderbtns.forEach(function (btn) {
  btn.addEventListener('click', function (e) {
    sliderMove(e.target.getAttribute('data-target'));
  });
});

function sliderMove(dir) {
  if (dir === 'next') {
    if (activeSlide < sliderItems.length - 1) {
      activeSlide++;
    } else {
      activeSlide = 0;
    }
  } else {
    if (activeSlide > 0) {
      activeSlide--;
    } else {
      activeSlide = sliderItems.length - 1;
    }
  }

  sliderItems.forEach(function (item) {
    item.classList.remove('active');
  });
  sliderItems[activeSlide].classList.add('active');
}

setInterval(function () {
  sliderMove('next');
}, 5000); // video

var video = document.querySelector('.video__mp4'),
    start = document.querySelector('#start'),
    end = document.querySelector('#end'),
    progress = document.querySelector('.video__progress'),
    line = document.querySelector('.video__line'),
    ruler = document.querySelector('.video__progress-ruler'),
    restart = document.querySelector('.video__restart'),
    prevSpeed = document.querySelector('.video__prev-speed'),
    prev = document.querySelector('.video__prev'),
    playPause = document.querySelector('.video__play'),
    next = document.querySelector('.video__next'),
    nextSpeed = document.querySelector('.video__next-speed'),
    volumeIcon = document.querySelector('.video__volume-icon'),
    volumeRange = document.querySelector('.video__volume-range'),
    screen = document.querySelector('.video__screen'),
    speedText = document.querySelector('.video__speed-text');
playPause.addEventListener('click', function () {
  videoPlay(playPause);
});
video.addEventListener('dblclick', function () {
  videoPlay(playPause);
});

function videoPlay(playPause) {
  playPause.classList.toggle('active');

  if (video.paused == true) {
    video.play();
    videoEnd();
    videoStart();
  } else {
    video.pause();
  }
}

function changeTime(time) {
  var noll = function noll(num) {
    return num < 10 ? '0' + num : num;
  };

  var hour = Math.trunc(time / 3600);
  time -= hour * 3600;
  var minute = Math.trunc(time / 60);
  time -= minute * 60;
  time = Math.trunc(time);
  return "".concat(noll(hour), ":").concat(noll(minute), ":").concat(noll(time));
}

function videoStart() {
  setInterval(function () {
    return start.innerHTML = changeTime(video.currentTime);
  }, 1000);
}

function videoEnd() {
  end.innerHTML = changeTime(video.duration);
}

restart.addEventListener('click', function () {
  video.currentTime = 0;
});
prevSpeed.addEventListener('click', function () {
  playDownSpeed();
});

function playDownSpeed() {
  if (video.playbackRate > 0) {
    video.playbackRate = video.playbackRate - 0.25;
    speedText.style.opacity = "1";
    speedText.innerHTML = video.playbackRate + 'x';
    setTimeout(function () {
      speedText.style.opacity = "0";
    }, 1000);
  }
}

nextSpeed.addEventListener('click', function () {
  playUpSpeed();
});

function playUpSpeed() {
  if (video.playbackRate < 2) {
    video.playbackRate = video.playbackRate + 0.25;
    speedText.style.opacity = "1";
    speedText.innerHTML = video.playbackRate + 'x';
    setTimeout(function () {
      speedText.style.opacity = "0";
    }, 1000);
  }
}

prev.addEventListener('click', function () {
  alert('sizda boshqa video yoq');
});
next.addEventListener('click', function () {
  alert('sizda boshqa video yoq');
});
line.addEventListener('click', function (e) {
  var videoTime = e.offsetX / line.clientWidth * video.duration;
  video.currentTime = videoTime;
});
video.addEventListener('timeupdate', function () {
  var progressWidth = video.currentTime / video.duration;
  progress.style.width = progressWidth * 100 + '%';
});
var volumeIcons = ['mute', 'off', 'down', 'normal', 'up'];

video.onvolumechange = function () {
  for (var _i2 = 0; _i2 < volumeIcons.length; _i2++) {
    volumeIcon.classList.remove(volumeIcons[_i2]);
  }

  var volume = video.volume * 100;

  if (video.muted) {
    volumeIcon.classList.add('mute');
  } else if (volume > 75) {
    volumeIcon.classList.add('up');
  } else if (volume > 50) {
    volumeIcon.classList.add('normal');
  } else if (volume > 25) {
    volumeIcon.classList.add('down');
  } else if (volume > 0) {
    volumeIcon.classList.add('off');
  } else if (volume == 0) {
    volumeIcon.classList.add('mute');
  }
};

volumeIcon.addEventListener('click', function () {
  return video.muted == true ? video.muted = false : video.muted = true;
});
volumeRange.addEventListener('click', function (e) {
  video.volume = e.currentTarget.value / 100;
});
screen.addEventListener('click', function () {
  video.requestFullscreen();
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
